#!/usr/bin/python3

import os
import socket
import subprocess
from time import sleep

ip = '172.31.45.126'
port = 9999

client = socket.socket()
client.connect((ip, port))
print("connected with server")

client.sendall("shell_code_to_server     ".encode())

def exec_shell(shellfile):
    print("함수 시작")
    command = "su root " + shellfile
    os.system(command)

filename = './shellcodes/shellcode'
result_file = open("./result.log", 'rb')
seek_file = open("./seek.txt", 'rb+')

while True:
    data = client.recv(25)
    print(data.decode())
    if data.decode() == 'shell_code_to_client     ':
        i = 1
        shellfile_list = []
        try:
            # while True:
            for _ in range(1, 32):
                i = '{0:02d}'.format(i)
                shellfile = filename + str(i)
                shellfile_list.append(shellfile)
                with open(shellfile, 'w+') as f:
                    data = client.recv(4)
                    length = int.from_bytes(data, "little")
                    print("쉘코드 전송 시작")
                    data = client.recv(length)
                    msg = data.decode()
                    f.write(msg)
                    f.close()
                i = int(i) + 1

            for i in shellfile_list:
                exec_shell(i)

            print("함수 종료")
            client.sendall("shell_result   ".encode())
            a = result_file.seek(int(seek_file.readlines()[-1]))  # 파일 안 읽었던 부분부터 읽어오기 위해 위치 seek로 찾음
            print(a)
            data = result_file.read()  # result 파일 안 읽었던 부분부터 읽어옴
            length = len(data)  # 새로운 result 파일 길이 측정하고
            client.sendall(length.to_bytes(4, byteorder='little'))  # 파일 크기 전송
            client.send(data)  # result 서버의 result 파일로 전송
            print(str(result_file.tell()).encode())
            seek_file.write(str(result_file.tell()).encode())
            seek_file.write("\n".encode())
            # sleep(1000)
        except Exception as ex:
            print(ex)

client.close()
