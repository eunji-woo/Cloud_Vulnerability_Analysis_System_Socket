#!/usr/bin/python3

import os
import socket

ip = '172.31.45.126'
port = 9999

client = socket.socket()
client.connect((ip, port))
print("connected with server")

client.sendall("shell_code_to_server     ".encode())

def exec_shell(shellfile, run_date, duration, repeat):
    print("함수 시작")
    plus = 0
    if duration == "day":
        plus_days = 1
    elif duration == "week":
        plus_days = 7
    print("duration", duration)

    for i in range(int(repeat)):
        command = "at " + run_date[1] + " " + run_date[0] + " -f " + shellfile + " +" + str(plus) +"days"
        print("command: ", command)
        plus += plus_days
        os.system(command)
        #run_date = #datetime형식으로 바꾸고 + datetime.timedelta(days=1)

filename = './shellcodes/U'
result_file = open("./result.log", 'rb')
seek_file = open("./seek.txt", 'rb+')

while True:
    data = client.recv(25)

    if data.decode() == 'shell_code_to_client     ':
        i = 1
        shellfile_list = []
        print("제발ㄹ")
        run_date = client.recv(19)
        print(' ')
        run_date = run_date.decode('utf-8')
        print("run_date: ", run_date)
        run_date = run_date.split(' ')
        print("run_date[1]", run_date[1])
        print("run_date[0]", run_date[0])
        run_date[1] = run_date[1][0:5]
        print("run_date[1]: ", run_date[1])
        duration = client.recv(3) #바꿔야함,, 듀오저
        duration = duration.decode('utf-8')
        print("duration: ", duration)
        repeat = client.recv(1)
        repeat = repeat.decode('utf-8')
        print("repeat: ", repeat)
        result = client.recv(1)
        result = result.decode('utf-8')#넘어오는 진단코드 개수
        print("result: ", result)
        print("\n")
        try:
            # while True:
            for _ in range(int(result)): # 범위 받아온 걸로 돌아가게 고쳐야 하 ㅁ
                print("try for")
                i = '{0:02d}'.format(i)
                shellfile = filename + i
                print("shellfile: ", shellfile)
                #shellfile_list.append(shellfile)
                print("shellfile_list.append: ", shellfile_list.append(shellfile))
                with open(shellfile, 'w+') as f:
                    print("open")
                    data = client.recv(4)
                    length = int.from_bytes(data, "little")
                    print("쉘코드 전송 시작")
                    data = client.recv(length)
                    msg = data.decode()
                    f.write(msg)
                    f.close()
                i = int(i) + 1

            print("exec_shell 전에")
            print("shellfile_list: ", shellfile_list)
            for i in shellfile_list:
                print("shell_file_list_i: ", i)
                exec_shell(i, run_date, duration, repeat)

            print("함수 종료")
            client.sendall("shell_result_to_server   ".encode())
            a = result_file.seek(int(seek_file.readlines()[-1]))  # 파일 안 읽었던 부분부터 읽어오기 위해 위치 seek로 찾음
            print(a)
            data = result_file.read()  # result 파일 안 읽었던 부분부터 읽어옴
            length = len(data)  # 새로운 result 파일 길이 측정하고
            print("result_data: ", data)
            client.sendall(length.to_bytes(4, byteorder='little'))  # 파일 크기 전송
            client.send(data)  # result 서버의 result 파일로 전송
            print(str(result_file.tell()).encode())
            seek_file.write(str(result_file.tell()).encode())
            seek_file.write("\n".encode())
            print("끝?")
        except Exception as ex:
            print("에러", ex)

client.close()
